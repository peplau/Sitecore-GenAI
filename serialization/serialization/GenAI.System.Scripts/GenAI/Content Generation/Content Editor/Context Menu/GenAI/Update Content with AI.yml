---
ID: "bc7b52df-221d-46da-bbab-9e2052d05e5d"
Parent: "1106b4db-c460-4a15-8d92-fdb0eaf46ce6"
Template: "dd22f1b3-bd87-4db2-9e7d-f7a496888d43"
Path: /sitecore/system/Modules/PowerShell/Script Library/GenAI/Content Generation/Content Editor/Context Menu/GenAI/Update Content with AI
SharedFields:
- ID: "06d5295c-ed2f-4a54-9bf2-26228d113318"
  Hint: __Icon
  Value: Office/32x32/robot.png
- ID: "b1a94ff0-6897-47c0-9c51-aa6acb80b1f0"
  Hint: Script
  Value: |
    Import-Function -Name GenAI_Functions
    
    # -------------------
    # Script Setup
    # -------------------
    
    # Get GenAISettings - No GenAISettings item
    $settings = Get-GenAISettings
    if ($settings -eq $null){
        Write-Log "[GenAI] You must setup your GenAISettings item" -Log Error
        Close-Window
    }
    # APIKey - No APIKey is set
    $apiKey = $settings.apiKey
    if ([string]::IsNullOrEmpty($apiKey) -eq $true){
        Write-Log "[GenAI] You must setup your 'API Key' in the GenAISettings item" -Log Error
        Close-Window
    }
    # Get Model - No Model is set
    $model = $settings.model
    if ([string]::IsNullOrEmpty($model) -eq $true){
        Write-Log "[GenAI] You must setup your 'Model' at the GenAISettings item" -Log Error
        Close-Window
    }
    
    # Select the template
    $selectedTemplateId = $SitecoreContextItem.TemplateId
    
    # --------------------------
    # Content User Prompt
    # --------------------------
    $lengthOptions = @{
        "Headline" = "Headline"
        "Medium" = "Medium"
        "Long" = "Long"
    }
    
    $toneOptions = @{
        "Educational" = "Educational"
        "Conversational" = "Conversational"
        "Persuasive" = "Persuasive"
        "Humorous" = "Humorous"
        "Formal" = "Formal"
        "Inspirational" = "Inspirational"
        "Technical" = "Technical"
        "Analytical" = "Analytical"
        "Creative" = "Creative"
    }
    
    # Fields from templates -----
    $fieldOptions = @{}
    [Sitecore.Data.Items.TemplateItem] $selectedTemplate = Get-Item -Path master: -ID $selectedTemplateId
    foreach($field in $selectedTemplate.Fields){
        if (($field.Type.ToLower().Contains("text") -or $field.Type.ToLower().Contains("image")) -and $field.Key.StartsWith("__") -eq $false){
            $fieldOptions += @{"$($field.Name) ($($field.Type))" = $field.ID.ToString()}
        }
    }
    # -----------
    
    $parameters = @(
        @{ Name = "contentInput"; Title="What do you want to change in this content?"; Lines=7; Placeholder = ""; Tab="Content"},
        @{ Name = "lenght"; Title="Select the length"; Options = $lengthOptions; Editor="radio"; Tab="Content"; Value="Headline"}
        @{ Name = "tone"; Title="Choose a tone for your text"; Options = $toneOptions; Tab="Content"}
        @{ Name = "fields"; Title="Select the fields to update:"; Options = $fieldOptions; Editor="check"; Tab="Template"}
    )
    
    $props = @{
        Title = "Update Content with AI";
        Description = " ";
        Icon = "OfficeWhite/32x32/robot.png";
        ShowHints = $true;
        Parameters = $parameters;
        Width = 600;
        Height = 550;
    }
    $result = Read-Variable @props
    if($result -ne "ok" -or [String]::IsNullOrEmpty($contentInput) -or $fields.Count -eq 0) {
        Close-Window
        Exit
    }
    
    # --------------------------
    # Content Generation Prompt
    # --------------------------
    # Template
    $database = Get-Database -Name "master"
    $templateItem = [Sitecore.Data.Managers.TemplateManager]::GetTemplate($selectedTemplateId, $database)
    $templateName = $templateItem.FullName
    # Fields
    $textFieldArray = @()
    $imageFieldArray = @()
    foreach($fieldId in $fields){
        $fieldItem = Get-Item -Path master: -ID $fieldId
        if ($fieldItem -and $fieldItem.TemplateName -eq "Template field"){
            $fieldName = $fieldItem.Name
            $fieldType = $fieldItem["Type"]
            if ($fieldType.ToLower() -ne "image"){
                $oldValue = $SitecoreContextItem[$fieldName]
                $textFieldArray += @{Field=$fieldName; Type=$fieldType; OldValue=$oldValue}
            }
            else {
                $imageFieldArray += @{Field=$fieldName; Type=$fieldType}
            }
        }
    }
    $textFieldJson = $textFieldArray | ConvertTo-Json
    $imageFieldJson = $imageFieldArray | ConvertTo-Json
    $allFieldsJson = $textFieldArray + $imageFieldArray | ConvertTo-Json
    
    $sb = New-Object -TypeName "System.Text.StringBuilder"
    [void]$sb.AppendLine("You will help a Sitecore Content Editor to generate content for an item of a given Template")
    [void]$sb.AppendLine("INPUT: ")
    [void]$sb.AppendLine("- Template Name (string) Eg: 'Article'")
    [void]$sb.AppendLine("- Fields to generate content (JSON) Eg: [{Field:'Title',Type:'Single-Line Text',OldValue:'Old Value'},{Field:'Body',Type:'Rich Text',OldValue:'Old Value'}]")
    [void]$sb.AppendLine("- Length (string)")
    [void]$sb.AppendLine("- Tone (string)")
    [void]$sb.AppendLine("- Content Input (string) - Description of what needs to be updated")
    [void]$sb.AppendLine("OUTPUT: Generated content (JSON)")
    [void]$sb.AppendLine("- Skip any explanations, output the JSON and nothing else")
    [void]$sb.AppendLine("- Match content with field types: Short text for 'Single-Line Text', Long text for 'Multi-Line Text', Basic HTML markup for 'Rich Text'")
    [void]$sb.AppendLine("- Image fields, return the prompt to be used for the Image Generation")
    [void]$sb.AppendLine("- Image fields should also return extra properties - Property:'Tags' (Comma-separated list of tags for the image) - Property:'Dimensions' (Must be one of: '256x256', '512x512', '1024x1024', '1024x1792', '1792x1024')")
    
    [void]$sb.AppendLine("Example of valid output: [{FieldName:'Field1', Value:'Content', Tags:'Tag1,Tag2'},{FieldName:'Image', Value:'Prompt', Tags:'Tag1,Tag2', Dimensions:'1024x1024'}]")
    $systemPrompt = $sb.ToString()
    
    $sb = New-Object -TypeName "System.Text.StringBuilder"
    [void]$sb.AppendLine("- Template: $($templateName)")
    [void]$sb.AppendLine("- Fields: $($allFieldsJson)")
    [void]$sb.AppendLine("- Length: $($lenght)")
    [void]$sb.AppendLine("- Tone: $($tone)")
    [void]$sb.AppendLine("- Content Input: ")
    [void]$sb.AppendLine("$($contentInput)")
    $userPrompt = $sb.ToString()
    
    # --------------------------
    # Content Generation Itself
    # --------------------------
    $messageFromGpt = Get-MessageFromGpt $systemPrompt $userPrompt $apiKey $model
    $messageFromGpt = $messageFromGpt.Replace('```json','').Replace('```]','').Replace('```','')
    $jsonMessage = $messageFromGpt | ConvertFrom-Json
    
    # --------------------------------------
    # Update Item with Generated Content
    # --------------------------------------
    $SitecoreContextItem.Editing.BeginEdit()
    foreach($fieldEntry in $jsonMessage){
        $fieldName = $fieldEntry.FieldName
        $generatedValue = $fieldEntry.Value
        # Only save text fields
        $imageField = $imageFieldArray | Where-Object { $_.Field -eq $fieldName } | Select-Object -First 1
        if ($imageField -eq $null){
            $SitecoreContextItem[$fieldName] = $generatedValue
        }
    }
    $SitecoreContextItem.Editing.EndEdit()
    
    # --------------------------------------
    # Generate Images and save 
    # --------------------------------------
    if ($imageFieldArray.Count -gt 0) {
        $authToken = $null
        foreach($fieldEntry in $jsonMessage){
            $fieldName = $fieldEntry.FieldName
            $generatedValue = $fieldEntry.Value
            $imageField = $imageFieldArray | Where-Object { $_.Field -eq $fieldName } | Select-Object -First 1
            if ($imageField -ne $null){
                
                # Generate image and Upload Asset to Content Hub ----
                $imagePrompt = "$($generatedValue) (Tone: $($tone))"
                $newImageName = "$($generatedValue).png"
                $dimensions = $fieldEntry.Dimensions
                
                # Sync or Async?
                if ($settings.useConnect -eq "1") {
                    Generate-ImageAsync $SitecoreContextItem.ID.ToGuid().ToString() $imagePrompt $dimensions $fieldName $settings
                }
                else {
                    if ($authToken -eq $null){
                        $authToken = Get-CHToken $settings.baseUrl $settings.username $settings.password
                    }
                    Generate-ImageSync $SitecoreContextItem $imagePrompt $newImageName $dimensions $apiKey $settings $authToken
                }
            }
        }
    }
Languages:
- Language: en
  Versions:
  - Version: 1
    Fields:
    - ID: "25bed78c-4957-4165-998a-ca1b52f67497"
      Hint: __Created
      Value: 20240826T131422Z
    - ID: "52807595-0f8f-4b20-8d2a-cb71d28c6103"
      Hint: __Owner
      Value: |
        sitecore\Admin
    - ID: "5dd74568-4d4b-44c1-b513-0af5f4cda34f"
      Hint: __Created by
      Value: |
        sitecore\Admin
    - ID: "8cdc337e-a112-42fb-bbb4-4143751e123f"
      Hint: __Revision
      Value: "fabac16f-adc0-4634-beea-b9d943476b5b"
    - ID: "badd9cf9-53e0-4d0c-bcc0-2d784c282f6a"
      Hint: __Updated by
      Value: |
        sitecore\rpeplau@arke.com
    - ID: "d9cf14b1-fa16-4ba6-9288-e8a174d4d522"
      Hint: __Updated
      Value: 20240903T180435Z
